<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GeneticSharp.Extensions</name>
    </assembly>
    <members>
        <member name="T:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness">
            <summary>
            A fitness function to auto config another genetic algorithm.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.#ctor(GeneticSharp.Domain.Fitnesses.IFitness,GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness" /> class.
            </summary>
            <param name="targetFitness">The target fitness.</param>
            <param name="targetChromosome">The target chromosome.</param></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.PopulationMinSize">
            <summary>
            Gets or sets the minimum size of the population.
            </summary>
            <value>
            The minimum size of the population.
            </value></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.PopulationMaxSize">
            <summary>
            Gets or sets the maximum size of the population.
            </summary>
            <value>
            The maximum size of the population.
            </value></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.Termination">
            <summary>
            Gets or sets the termination.
            </summary>
            <value>
            The termination.
            </value></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.TaskExecutor">
            <summary>
            Gets or sets the task executor which will be used to execute fitness evaluation.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.AutoConfig.AutoConfigFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Evaluates the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome.</param>
            <returns>The chromosome fitness.</returns></member>
        <member name="T:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome">
            <summary>
            Auto config another genetic algorithm.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome" /> class.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.Selection">
            <summary>
            Gets the selection.
            </summary>
            <value>
            The selection.
            </value></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.Crossover">
            <summary>
            Gets the crossover.
            </summary>
            <value>
            The crossover.
            </value></member>
        <member name="P:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.Mutation">
            <summary>
            Gets the mutation.
            </summary>
            <value>
            The mutation.
            </value></member>
        <member name="M:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>
            The new chromosome.
            </returns></member>
        <member name="M:GeneticSharp.Extensions.AutoConfig.AutoConfigChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene.
            </summary>
            <param name="geneIndex">Index of the gene.</param>
            <returns>The new gene.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid AutoConfigChromosome gene index.</exception></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersChromosome">
            <summary>
            Checkers chromosome.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersChromosome.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersChromosome" /> class.
            </summary>
            <param name="movesAhead">Moves ahead.</param>
            <param name="boardSize">Board size.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersChromosome.Moves">
            <summary>
            Gets the moves.
            </summary>
            <value>The moves.</value></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene for the specified index.
            </summary>
            <returns>The gene.</returns>
            <param name="geneIndex">Gene index.</param></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>The new chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersChromosome.Clone">
            <summary>
            Creates a clone.
            </summary>
            <returns>The chromosome clone.</returns></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersFitness">
            <summary>
            Checkers fitness.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersFitness.#ctor(GeneticSharp.Extensions.Checkers.CheckersBoard)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersFitness" /> class.
            </summary>
            <param name="board">The checkers board.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersFitness.Board">
            <summary>
            Gets the board.
            </summary>
            <value>The board.</value></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Performs the evaluation against the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome to be evaluated.</param>
            <returns>The fitness of the chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersFitness.EvaluateMove(GeneticSharp.Extensions.Checkers.CheckersMove)">
            <summary>
            Evaluates the move.
            </summary>
            <returns>The move fitness.</returns>
            <param name="move">The move.</param></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersFitness.Reset">
            <summary>
            Resets the fitness.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersFitness.Update(GeneticSharp.Extensions.Checkers.CheckersChromosome)">
            <summary>
            Update the specified checkersChromosome.
            </summary>
            <param name="checkersChromosome">Checkers chromosome.</param></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersMoveKind">
            <summary>
            Move kind.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersMoveKind.Invalid">
            <summary>
            The move is invalid.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersMoveKind.Forward">
            <summary>
            A forward move.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersMoveKind.Capture">
            <summary>
            A capture move.
            </summary></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersMove">
            <summary>
            Checkers move.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersMove.#ctor(GeneticSharp.Extensions.Checkers.CheckersPiece,GeneticSharp.Extensions.Checkers.CheckersSquare)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersMove" /> class.
            </summary>
            <param name="piece">The piece which will be moved.</param>
            <param name="toSquare">The target square.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersMove.Piece">
            <summary>
            Gets or sets move from square.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersMove.ToSquare">
            <summary>
            Gets or sets move to square.
            </summary></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersSquareState">
            <summary>
            Checkers square state.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersSquareState.Free">
            <summary>
            Square is free.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersSquareState.NotPlayable">
            <summary>
            Square is not playable (white one).
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersSquareState.OccupiedByPlayerOne">
            <summary>
            Square is occupied by player one.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersSquareState.OccupiedByPlayerTwo">
            <summary>
            Square is occupied by player two.
            </summary></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersSquare">
            <summary>
            Checkers square.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersSquare" /> class.
            </summary>
            <param name="columnIndex">Column index.</param>
            <param name="rowIndex">Row index.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersSquare.ColumnIndex">
            <summary>
            Gets or sets the index of the column.
            </summary>
            <value>The index of the column.</value></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersSquare.RowIndex">
            <summary>
            Gets or sets the index of the row.
            </summary>
            <value>The index of the row.</value></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersSquare.State">
            <summary>
            Gets the state.
            </summary>
            <value>The state.</value></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersSquare.CurrentPiece">
            <summary>
            Gets the current piece.
            </summary>
            <value>The current piece.</value></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.IsNotPlayableSquare(System.Int32,System.Int32)">
            <summary>
            Verifies if the column and row index specified are coordinates of not playable square.
            </summary>
            <param name="columnIndex">The column index.</param>
            <param name="rowIndex">The row index.</param>
            <returns>True if it is not playable square.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.PutPiece(GeneticSharp.Extensions.Checkers.CheckersPiece)">
            <summary>
            Put the specified piece above this square.
            </summary>
            <param name="piece">The piece.</param>
            <returns>True if square was free and could receive the piece, otherwise false.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.RemovePiece">
            <summary>
            Remove the current piece.
            </summary>
            <returns>True if has a piece to be removed, otherwise false.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersSquare.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns></member>
        <member name="T:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome">
            <summary>
            Ghostwriter chromosome.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome.#ctor(System.Int32,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome" /> class.
            </summary>
            <param name="maxTextWordLength">Max text word length.</param>
            <param name="words">The words.</param></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene for the specified index.
            </summary>
            <returns>The gene.</returns>
            <param name="geneIndex">Gene index.</param></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>The new chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome.Clone">
            <summary>
            Creates a clone.
            </summary>
            <returns>The chromosome clone.</returns></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterChromosome.BuildText">
            <summary>
            Gets the text.
            </summary>
            <returns>The text.</returns></member>
        <member name="T:GeneticSharp.Extensions.Ghostwriter.GhostwriterFitness">
            <summary>
            Ghostwriter fitness.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Ghostwriter.GhostwriterFitness.EvaluateFunc">
            <summary>
            Gets or sets the evaluate function.
            </summary>
            <value>The evaluate function.</value></member>
        <member name="M:GeneticSharp.Extensions.Ghostwriter.GhostwriterFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Performs the evaluation against the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome to be evaluated.</param>
            <returns>The fitness of the chromosome.</returns></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.EqualityFitness">
            <summary>
            Fitness based on this paper: Genetic Algorithm for Solving Simple Mathematical Equality Problem.
            <see href="http://arxiv.org/ftp/arxiv/papers/1308/1308.4675.pdf" />
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EqualityFitness.GetEquationResult(GeneticSharp.Extensions.Mathematic.EquationChromosome)">
            <summary>
            Gets the equation result using the chromosome's genes.
            </summary>
            <param name="equalityChromosome">The chromosome.</param>
            <returns>The equation result.</returns></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EqualityFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Evaluates the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome.</param>
            <returns>The chromosome fitness.</returns></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.EquationSolverFitness">
            <summary>
            Equation solver fitness.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EquationSolverFitness.#ctor(System.Int32,System.Func{GeneticSharp.Domain.Chromosomes.Gene[],System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Mathematic.EquationSolverFitness" /> class.
            </summary>
            <param name="expectedResult">Expected result.</param>
            <param name="getEquationResult">Get equation result.</param></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EquationSolverFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Performs the evaluation against the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome to be evaluated.</param>
            <returns>The fitness of the chromosome.</returns></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome">
            <summary>
            Function builder chromosome.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.MaxIntOperation">
            <summary>
            The max integer operation.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome" /> class.
            </summary>
            <param name="availableOperations">Available operations.</param>
            <param name="maxOperations">Max operations.</param></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.BuildAvailableOperations(System.Int32)">
            <summary>
            Builds the available operations.
            </summary>
            <returns>The available operations.</returns>
            <param name="parametersCount">Parameters count.</param></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.GetParameterNames(System.Int32)">
            <summary>
            Gets the parameter names.
            </summary>
            <returns>The parameter names.</returns>
            <param name="parametersCount">Parameters count.</param></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.BuildFunction">
            <summary>
            Builds the function.
            </summary>
            <returns>The function.</returns></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>The new chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene for the specified index.
            </summary>
            <returns>The gene.</returns>
            <param name="geneIndex">Gene index.</param></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness">
            <summary>
            Function builder fitness.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness.#ctor(GeneticSharp.Extensions.Mathematic.FunctionBuilderInput[])">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness" /> class.
            </summary>
            <param name="inputs">The arguments values and expected results of the function.</param></member>
        <member name="P:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness.AvailableOperations">
            <summary>
            Gets the available operations.
            </summary>
            <value>The available operations.</value></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Performs the evaluation against the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome to be evaluated.</param>
            <returns>The fitness of the chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderFitness.GetFunctionResult(System.String,GeneticSharp.Extensions.Mathematic.FunctionBuilderInput)">
            <summary>
            Gets the function result.
            </summary>
            <returns>The function result.</returns>
            <param name="function">The function.</param>
            <param name="input">The arguments values and expected results of the function.</param></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderInput">
            <summary>
            Function builder input.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.FunctionBuilderInput.#ctor(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Mathematic.FunctionBuilderInput" /> class.
            </summary>
            <param name="arguments">The arguments.</param>
            <param name="expectedResult">The expected result.</param></member>
        <member name="P:GeneticSharp.Extensions.Mathematic.FunctionBuilderInput.Arguments">
            <summary>
            Gets the arguments.
            </summary>
            <value>The arguments.</value></member>
        <member name="P:GeneticSharp.Extensions.Mathematic.FunctionBuilderInput.ExpectedResult">
            <summary>
            Gets the expected result.
            </summary>
            <value>The expected result.</value></member>
        <member name="T:GeneticSharp.Extensions.Tsp.TspChromosome">
            <summary>
            Travelling Salesman Problem chromosome.
            <remarks>
            Each gene represents a city index.
            </remarks>
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspChromosome.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Tsp.TspChromosome" /> class.
            </summary>
            <param name="numberOfCities">Number of cities.</param></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspChromosome.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>The distance.</value></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene for the specified index.
            </summary>
            <returns>The gene.</returns>
            <param name="geneIndex">Gene index.</param></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>The new chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspChromosome.Clone">
            <summary>
            Creates a clone.
            </summary>
            <returns>The chromosome clone.</returns></member>
        <member name="T:GeneticSharp.Extensions.Tsp.TspCity">
            <summary>
            Travelling Salesman city.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspCity.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Tsp.TspCity" /> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspCity.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>The x.</value></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspCity.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>The y.</value></member>
        <member name="T:GeneticSharp.Extensions.Tsp.TspFitness">
            <summary>
            Travelling Salesman Problem fitness function.
            <remarks>
            The travelling salesman problem (TSP) or travelling salesperson problem asks the following question:
            Given a list of cities and the distances between each pair of cities, what is the shortest possible
            route that visits each city exactly once and returns to the origin city?
            <see href="http://en.wikipedia.org/wiki/Travelling_salesman_problem">Wikipedia</see>
            </remarks>
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspFitness.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Tsp.TspFitness" /> class.
            </summary>
            <param name="numberOfCities">The number of cities.</param>
            <param name="minX">The minimum city x coordinate.</param>
            <param name="maxX">The maximum city x coordinate.</param>
            <param name="minY">The minimum city y coordinate.</param>
            <param name="maxY">The maximum city y coordinate..</param></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspFitness.Cities">
            <summary>
            Gets the cities.
            </summary>
            <value>The cities.</value></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspFitness.MinX">
            <summary>
            Gets the minimum x.
            </summary>
            <value>The minimum x.</value></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspFitness.MaxX">
            <summary>
            Gets the max x.
            </summary>
            <value>The max x.</value></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspFitness.MinY">
            <summary>
            Gets the minimum y.
            </summary>
            <value>The minimum y.</value></member>
        <member name="P:GeneticSharp.Extensions.Tsp.TspFitness.MaxY">
            <summary>
            Gets the max y.
            </summary>
            <value>The max y.</value></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Performs the evaluation against the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome to be evaluated.</param>
            <returns>The fitness of the chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Tsp.TspFitness.CalcDistanceTwoCities(GeneticSharp.Extensions.Tsp.TspCity,GeneticSharp.Extensions.Tsp.TspCity)">
            <summary>
            Calculates the distance between two cities.
            </summary>
            <returns>The distance two cities.</returns>
            <param name="one">City one.</param>
            <param name="two">City two.</param></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersPlayer">
            <summary>
            The checkers player.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersPlayer.PlayerOne">
            <summary>
            The player one.
            </summary></member>
        <member name="F:GeneticSharp.Extensions.Checkers.CheckersPlayer.PlayerTwo">
            <summary>
            The player two.
            </summary></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersBoard">
            <summary>
            Checkers board.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersBoard" /> class.
            </summary>
            <param name="size">The board size in number of squares of each side.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersBoard.Size">
            <summary>
            Gets the size.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersBoard.PlayerOnePieces">
            <summary>
            Gets the player one's pieces.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersBoard.PlayerTwoPieces">
            <summary>
            Gets the player two's pieces.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.Reset">
            <summary>
            Reset the board to initial state (player one and two with pieces in start positions).
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.GetSquare(System.Int32,System.Int32)">
            <summary>
            Gets the square from column index and row index specified.
            </summary>
            <returns>The square.</returns>
            <param name="columnIndex">Column index.</param>
            <param name="rowIndex">Row index.</param></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.MovePiece(GeneticSharp.Extensions.Checkers.CheckersMove)">
            <summary>
            Move a piece using the specified move.
            </summary>
            <param name="move">The move to perform.</param>
            <returns>True if move was performed, otherwise false.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.GetMoveKind(GeneticSharp.Extensions.Checkers.CheckersMove)">
            <summary>
            Gets the kind of the move.
            </summary>
            <returns>The move kind.</returns>
            <param name="move">The move.</param></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.CountCatchableByPiece(GeneticSharp.Extensions.Checkers.CheckersPiece)">
            <summary>
            Counts the number of pieces catchable by specified piece.
            </summary>
            <param name="piece">The piece which can capture another ones.</param>
            <returns>The number of catchable pieces.</returns></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersBoard.CountPieceChancesToBeCaptured(GeneticSharp.Extensions.Checkers.CheckersPiece)">
            <summary>
            Counts the number of chances the specified piece to be captured.
            </summary>
            <param name="piece">The piece which can be captured.</param>
            <returns>The number of changes of piece be captured.</returns></member>
        <member name="T:GeneticSharp.Extensions.Checkers.CheckersPiece">
            <summary>
            A checkers' piece.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Checkers.CheckersPiece.#ctor(GeneticSharp.Extensions.Checkers.CheckersPlayer)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Checkers.CheckersPiece" /> class.
            </summary>
            <param name="player">The player.</param></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersPiece.Player">
            <summary>
            Gets the player.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Checkers.CheckersPiece.CurrentSquare">
            <summary>
            Gets or sets the current square.
            </summary></member>
        <member name="T:GeneticSharp.Extensions.Mathematic.EquationChromosome">
            <summary>
            An equation chromosome.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EquationChromosome.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Mathematic.EquationChromosome" /> class.
            </summary>
            <param name="expectedResult">The equation expected result.</param>
            <param name="variablesNumber">The equation variables number.</param></member>
        <member name="P:GeneticSharp.Extensions.Mathematic.EquationChromosome.ResultRange">
            <summary>
            Gets the result range.
            </summary>
            <value>The result range.</value></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EquationChromosome.CreateNew">
            <summary>
            Creates the new.
            </summary>
            <returns>The new chromosome.</returns></member>
        <member name="M:GeneticSharp.Extensions.Mathematic.EquationChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene.
            </summary>
            <param name="geneIndex">Index of the gene.</param>
            <returns>The generated gene.</returns></member>
        <member name="T:GeneticSharp.Extensions.Drawing.BitmapChromosome">
            <summary>
            A chromosome that represents a bitmap.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapChromosome.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Drawing.BitmapChromosome" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param></member>
        <member name="P:GeneticSharp.Extensions.Drawing.BitmapChromosome.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value></member>
        <member name="P:GeneticSharp.Extensions.Drawing.BitmapChromosome.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapChromosome.GetPixels(System.Drawing.Bitmap)">
            <summary>
            Gets the pixels from bitmap.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns>The pixels.</returns></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapChromosome.GenerateGene(System.Int32)">
            <summary>
            Generates the gene.
            </summary>
            <param name="geneIndex">Index of the gene.</param>
            <returns>The new Gene.</returns></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapChromosome.CreateNew">
            <summary>
            Creates a new chromosome using the same structure of this.
            </summary>
            <returns>
            The new chromosome.
            </returns></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapChromosome.BuildBitmap">
            <summary>
            Builds the bitmap from genes.
            </summary>
            <returns>The bitmap.</returns></member>
        <member name="T:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness">
            <summary>
            Bitmap equality fitness.
            </summary></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness" /> class.
            </summary>
            <param name="targetBitmap">The target bitmap.</param></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness" /> class.
            </summary></member>
        <member name="P:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.BitmapWidth">
            <summary>
            Gets the width of the bitmap.
            </summary>
            <value>
            The width of the bitmap.
            </value></member>
        <member name="P:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.BitmapHeight">
            <summary>
            Gets the height of the bitmap.
            </summary>
            <value>
            The height of the bitmap.
            </value></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.Initialize(System.Drawing.Bitmap)">
            <summary>
            Initializes the specified target bitmap.
            </summary>
            <param name="targetBitmap">The target bitmap.</param></member>
        <member name="M:GeneticSharp.Extensions.Drawing.BitmapEqualityFitness.Evaluate(GeneticSharp.Domain.Chromosomes.IChromosome)">
            <summary>
            Evaluates the specified chromosome.
            </summary>
            <param name="chromosome">The chromosome.</param>
            <returns>The chromosome fitness.</returns></member>
    </members>
</doc>
